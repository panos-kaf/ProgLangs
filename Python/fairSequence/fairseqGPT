import sys

def find_min_difference(n,seq):
    total = sum(seq)
    
    # Create a matrix table where matrix[i][j] will be True if a 
    # subset with sum j can be achieved with the first i elements
    matrix = [[False] * (total+1) for i in range(n+1)]
    
    # Initialize the matrix table
    for i in range(n + 1):
        matrix[i][0] = True
    
    # Fill the matrix table
    for i in range(1, n+1):
        for j in range(1, total+1):
            matrix[i][j] = matrix[i - 1][j]
            if seq[i - 1] <= j:
                matrix[i][j] = matrix[i][j] or matrix[i - 1][j - seq[i - 1]]
    
    # Find the largest j such that matrix[n][j] is True and j is less than or equal to total_sum // 2
    half = total // 2
    for j in range(half, -1, -1):
        if matrix[n][j]:
            diff = total - 2 * j
            return diff

# Test the function
f = open(sys.argv[1])
n = int(f.readline())
seq = []
for num in f.readline().split():
    seq.append(int(num))

min_diff = find_min_difference(n,seq)
print(f"The minimum difference is: {min_diff}")
